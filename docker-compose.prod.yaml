services:
  traefik:
    container_name: traefik
    image: traefik:v3.4.1
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - default_network

  backend:
    container_name: backend
    image: bentoluizv/projeto_aplicado:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`89.117.33.177` || Host(`bentomachado.dev`))"
      - "traefik.http.routers.backend.entrypoints=web"
    env_file:
      - .env
    networks:
      - default_network
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:16
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 2s
      retries: 3
    networks:
      - default_network

  redis:
    container_name: redis
    image: redis:7.4.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 2s
      retries: 3
    networks:
      - default_network

volumes:
  postgres_data:
  redis_data:

networks:
  default_network:
