services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env.dev
    networks:
      - default_network
    depends_on:
      - postgres
      - redis
    command: "fastapi dev app.py --host 0.0.0.0"

  postgres:
    image: postgres:17.4
    env_file:
      - .env.dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - default_network

  redis:
    image: redis:7.4.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - default_network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - default_network
    depends_on:
      - backend

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    command: [ "--config=/etc/otel-collector-config.yml" ]
    ports:
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
    networks:
      - default_network
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - default_network
    depends_on:
      - prometheus
      - otel-collector
      - backend

volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  default_network:
